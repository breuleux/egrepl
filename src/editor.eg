
require:
   ;; codemirror as CodeMirror
   ;; "codemirror/addon/runmode/runmode"
   .earlmode


provide:
   Editor


class Editor:

   constructor{opts} =
      {
         elements => {
            editorarea => @textarea
         }
         eval => @eval
         setenv => @setenv
         prepare => @prepare = [-> pass]
         success => @success
         failure => @failure
         lang => @lang
         theme => @theme = .default
         live => @live = false
         keymap => @keymap = {=}
         codemirror => @CodeMirror
      } = opts

      @cm = @CodeMirror.from-text-area with
         @textarea
         {
            indentUnit = 3
            viewportMargin = 1/0
            theme = @theme
            lineNumbers = opts.line-numbers
         }

      @cm.addKeyMap{km & @keymap} where km = {

         "Ctrl-Enter"{cm} =
            @submit{}

         Tab = "indentAuto"

         "Ctrl-A" = "goLineStart"
         "Ctrl-E" = "goLineEnd"
         "Ctrl-K" = "killLine"
      }

      @cm.setOption{"mode", @lang}
      @cm.setSize{.auto, "100%"}

      @cm.on{.changes} with {} ->
         if [@live]:
            @submit{}

   async submit{} =
      text = @cm.getValue{}
      await @prepare{}
      ;; await @eval{text}
      match [await @eval{text}]:
         #success{v} -> @success{v}
         #failure{e} -> @failure{e}
         else ->
            throw E.editor.bad_eval{"eval must return #success{value} or #failure{error}"}
